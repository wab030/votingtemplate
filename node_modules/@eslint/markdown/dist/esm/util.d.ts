/**
 * Finds the line and column offsets for a given offset in a string.
 * @param {string} text The text to search.
 * @param {number} offset The offset to find.
 * @returns {{lineOffset:number,columnOffset:number}} The location of the offset.
 *      Note that `columnOffset` should be used as an offset to the column number
 *      of the given text in the source code only when `lineOffset` is 0.
 *      Otherwise, it should be used as a 0-based column number in the source code.
 */
export function findOffsets(text: string, offset: number): {
    lineOffset: number;
    columnOffset: number;
};
/**
 * Checks if a frontmatter block contains a title matching the given pattern
 * @param {string} value The frontmatter content
 * @param {RegExp|null} pattern The pattern to match against
 * @returns {boolean} Whether a title was found
 */
export function frontmatterHasTitle(value: string, pattern: RegExp | null): boolean;
/**
 * Replaces all HTML comments with whitespace.
 * This preserves offsets and locations of characters
 * outside HTML comments by keeping line breaks and replacing
 * other code units with a space character.
 * @param {string} value The string to remove HTML comments from.
 * @returns {string} The string with HTML comments removed.
 */
export function stripHtmlComments(value: string): string;
/**
 * @fileoverview Utility Library
 * @author Nicholas C. Zakas
 */
/**
 * CommonMark does not allow any white space between the brackets in a reference link.
 * If that pattern is detected, then it's treated as text and not as a link. This pattern
 * is used to detect that situation.
 */
export const illegalShorthandTailPattern: RegExp;
/**
 * Regular expression to match HTML comments, including multiline comments.
 */
export const htmlCommentPattern: RegExp;
